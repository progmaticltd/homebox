---

- name: Load the passwords
  ansible.builtin.include_tasks: install/load-passwords.yml

- name: Check if each service is running  # noqa command-instead-of-module
  ansible.builtin.shell: systemctl status slapd
  changed_when: false

- name: Check that ldap resolves to local host
  ansible.builtin.shell: >-
    set -o pipefail ;
    ping -c 1 ldap.{{ network.domain }}
  changed_when: false
  args:
    executable: /bin/bash

- name: Check that I can bind as readonly and get all uids
  no_log: '{{ hide_secrets }}'
  ansible.builtin.shell: >-
    ldapsearch
    -H ldapi:///
    -D '{{ ldap.readonly.dn }}'
    -w{{ readonly_password }}
    'uid'
  changed_when: false

- name: Check that I can bind as manager and get my details
  no_log: '{{ hide_secrets }}'
  ansible.builtin.shell: >-
    ldapsearch
    -H ldapi:///
    -D '{{ ldap.manager.dn }}'
    -w{{ manager_password }}
    '(uid=manager)'
  changed_when: false

- name: Check that I can bind as admin and get all uids
  no_log: '{{ hide_secrets }}'
  ansible.builtin.shell: >-
    ldapsearch
    -H ldapi:///
    -D '{{ ldap.admin.dn }}'
    -w{{ admin_password }}
    'uid'
  changed_when: false

- name: Check that every user is in the database
  no_log: '{{ hide_secrets }}'
  ansible.builtin.shell: >-
    set -o pipefail ;
    ldapsearch
    -H ldapi:///
    -D '{{ ldap.readonly.dn }}'
    -w{{ readonly_password }}
    '(uid={{ user.uid }})'
    | grep 'numEntries: 1'
  changed_when: false
  args:
    executable: /bin/bash
  with_items: '{{ users }}'
  loop_control:
    loop_var: user

- name: Check that I can bind using SSL
  no_log: '{{ hide_secrets }}'
  ansible.builtin.shell: >-
    ldapsearch
    -H ldaps://ldap.{{ network.domain }}/
    -D '{{ ldap.readonly.dn }}'
    -w{{ readonly_password }}
    'uid'
  changed_when: false

- name: Check that I can update the indexes
  become: true
  become_user: openldap
  become_method: sudo
  ansible.builtin.command: 'slapindex -n 1 -v {{ field }}'
  changed_when: false
  loop:
    - uid
    - cn
    - sn
    - givenName
    - mail
    - memberUid
    - uidNumber
    - gidNumber
    - intlMailAddr
  loop_control:
    loop_var: field
