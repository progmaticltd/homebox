---

# See https://docs.ejabberd.im/admin/configuration for reference


# loglevel: Verbosity of log files generated by ejabberd
loglevel: '{{ system.debug | ternary("debug", "info") }}'

# Disable ejabberdâ€™s internal log rotation, as the Debian package uses logrotate.
log_rotate_count: 0

# Ensure IP addresses are logged
hide_sensitive_log_data: false

# hosts: Domains served by ejabberd.
hosts:
  - '{{ network.domain }}'

# Disable certificate management, this is already handled by LetsEncrypt on Debian
acme:
  auto: false


certfiles:
  - '/etc/ssl/private/{{ network.domain }}.key'
  - '/etc/ssl/private/xmpp.{{ network.domain }}.key'
  - '/etc/ssl/private/conference.{{ network.domain }}.key'
  - '/etc/ssl/private/upload.{{ network.domain }}.key'
  - '/etc/ssl/private/pubsub.{{ network.domain }}.key'
  - '/etc/ssl/private/proxy.{{ network.domain }}.key'
  - '/etc/ssl/private/vjud.{{ network.domain }}.key'
  - '/etc/ssl/certs/{{ network.domain }}.crt'
  - '/etc/ssl/certs/xmpp.{{ network.domain }}.crt'
  - '/etc/ssl/certs/conference.{{ network.domain }}.crt'
  - '/etc/ssl/certs/upload.{{ network.domain }}.crt'
  - '/etc/ssl/certs/pubsub.{{ network.domain }}.crt'
  - '/etc/ssl/certs/proxy.{{ network.domain }}.crt'
  - '/etc/ssl/certs/vjud.{{ network.domain }}.crt'


# TLS configuration
define_macro:
  TLS_CIPHERS: '{{ security.tls.openssl_ciphers | join(":") }}'
  TLS_OPTIONS:
    - 'no_sslv3'
    - 'no_tlsv1'
    - 'no_tlsv1_1'
    - 'cipher_server_preference'
    - 'no_compression'


host_config:
  '{{ network.domain }}':
    sql_type: pgsql
    sql_server: localhost
    sql_username: ejabberd
    sql_password: '{{ ejabberd_db_password }}'
    sql_database: ejabberd


# Client to server parameters
c2s_ciphers: TLS_CIPHERS
c2s_protocol_options: TLS_OPTIONS

# Server to server parameters
s2s_ciphers: TLS_CIPHERS
s2s_use_starttls: required
s2s_protocol_options: TLS_OPTIONS


listen:

  - module: ejabberd_c2s
    port: 5222
    ip: '::'
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    starttls_required: true
    protocol_options: TLS_OPTIONS
    dhfile: /etc/ssl/ffdhe{{ security.dhparam_size }}.pem

  - module: ejabberd_c2s
    port: 5223
    ip: '::'
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    tls: true
    protocol_options: TLS_OPTIONS

  - module: ejabberd_s2s_in
    port: 5269
    ip: '::'
    max_stanza_size: 524288
    tls: true
    protocol_options: TLS_OPTIONS

  - module: ejabberd_http
    port: 5443
    ip: '::'
    tls: true
    protocol_options: TLS_OPTIONS
    request_handlers:
      /api: mod_http_api
      /bosh: mod_bosh
      /upload: mod_http_upload
      /ws: ejabberd_http_ws

  - module: ejabberd_http
    port: 5280
    ip: '::'
    tls: true
    protocol_options: TLS_OPTIONS
    request_handlers:
      /admin: ejabberd_web_admin
      /.well-known/acme-challenge: ejabberd_acme

  - module: ejabberd_stun
    port: 3478
    ip: '::'
    transport: udp
    use_turn: true
    turn_ipv4_address: '{{ ext_ipv4 | default("127.0.0.1") }}'
    turn_ipv6_address: '{{ ext_ipv6 | default("::1") }}'

##
## Authentication using LDAP
auth_method: ldap
ldap_servers:
  - 'ldap.{{ network.domain }}'
ldap_tls_cacertfile: '/etc/ssl/certs/ca-certificates.crt'
ldap_encrypt: tls
ldap_port: 636
ldap_rootdn: '{{ ldap_readonly_dn }}'
ldap_password: '{{ ldap_ro_password }}'
ldap_base: '{{ ldap_users_dn }}'
ldap_filter: '(objectClass=shadowAccount)'
ldap_uids:
  mail: '%u@{{ network.domain }}'


## Disabling digest-md5 SASL authentication. digest-md5 requires plain-text
## password storage (see auth_password_format option).
disable_sasl_mechanisms:
  - 'digest-md5'
  - 'X-OAUTH2'


acl:
  admin:
    user:
      - '@localhost'
      - 'postmaster': '{{ network.domain }}'

  ## Users from the domain
  local_users:
    server:
      - '{{ network.domain }}'
  local:
    user_regexp: ''
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128


access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_log:
    allow: admin
  muc_create:
    allow: local_users
  proxy65_access:
    allow: local_users
  pubsub_createnode:
    allow: local

  ## In-band registration allows registration of any possible username.
  ## To disable in-band registration, replace 'allow' with 'deny'.
  register:
    - deny
  trusted_network:
    allow: loopback


api_permissions:
  console commands:
    from:
      - ejabberd_ctl
    who: all
    what: '*'
  admin access:
    who:
      access:
        allow:
          - acl: loopback
          - acl: admin
      oauth:
        scope: 'ejabberd:admin'
        access:
          allow:
            - acl: loopback
            - acl: admin
    what:
      - '*'
      - '!stop'
      - '!start'
  public commands:
    who:
      ip: 127.0.0.1/8
    what:
      - status
      - connected_users_number


shaper:
  normal:
    rate: 3000
    burst_size: 20000
  fast: 200000


shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    5000: admin
    100: all
  c2s_shaper:
    none: admin
    normal: all
  s2s_shaper: fast


modules:
  mod_adhoc: { }
  mod_admin_extra: { }
  mod_announce:
    access: announce
  mod_avatar: { }
  mod_blocking: { }
  mod_bosh: { }
  mod_caps: { }
  mod_carboncopy: { }
  mod_client_state: { }
  mod_configure: { }
  mod_disco: { }
  mod_fail2ban: { }
  mod_http_api: { }

  ### Offline file sharing on a specific directory
  mod_http_upload:
    docroot: /var/www/ejabberd/files
    put_url: https://xmpp.{{ network.domain }}/upload
    get_url: https://xmpp.{{ network.domain }}/upload
    dir_mode: '0755'
    file_mode: '0644'
    thumbnail: true
    max_size: 104857600
    secret_length: 40
    access: local
    custom_headers:
      Access-Control-Allow-Origin: 'https://@HOST@'
      Access-Control-Allow-Methods: 'GET,HEAD,PUT,OPTIONS'
      Access-Control-Allow-Headers: 'Content-Type'

  ### Message Archive Management
  mod_last: { }
  mod_mam:
    db_type: sql
  mod_muc:
    host: conference.{{ network.domain }}
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
    access_mam:
      - allow
    default_room_options:
      mam: true
  mod_muc_admin: { }
  mod_offline:
    access_max_user_messages: max_user_offline_messages
  mod_ping: { }
  mod_pres_counter:
    count: 5
    interval: 60
  mod_privacy: { }
  mod_private: { }

  ### Implements SOCKS5 Bytestreams (XEP-0065). It allows ejabberd to act as
  ### a file transfer proxy between two XMPP clients.
  mod_proxy65:
    host: proxy.{{ network.domain }}
    name: File Transfer Proxy
    ip: '::'
    port: 7778
    max_connections: 5
    access: proxy65_access
    shaper: proxy65_shaper
    # Use the right certificate for this service
    certfile: '/etc/ssl/certs/proxy.{{ network.domain }}.crt'

  ### Publish-Subscribe Service (XEP-0060)
  mod_pubsub:
    access_createnode: pubsub_createnode
    # reduces resource comsumption, but XEP incompliant
    ignore_pep_from_offline: true
    # XEP compliant, but increases resource comsumption
    # ignore_pep_from_offline: false
    last_item_cache: false
    plugins:
      - flat
      - pep
    # Use the right certificate for this service
    certfile: '/etc/ssl/certs/pubsub.{{ network.domain }}.crt'


  mod_push: { }
  mod_push_keepalive: { }

  mod_roster:
    versioning: true

  ### Add contacts from the same directory
  mod_shared_roster_ldap:
    ldap_rfilter: '(&(objectClass=posixGroup)(memberUid=%u))'
    ldap_gfilter: '(&(objectClass=posixGroup)(cn=%g))'
    ldap_ufilter: '(&(objectClass=posixAccount)(uid=%u))'
    ldap_filter: '(cn=*)'
    ldap_groupattr: 'cn'
    ldap_groupdesc: 'displayName'
    ldap_userdesc: 'cn'
    ldap_useruid: 'uid'

  ### Map LDAP attributes to vCard fields
  mod_vcard:
    db_type: ldap
    search: true
    ldap_base: '{{ ldap_users_dn }}'
    ldap_vcard_map:
      NICKNAME: { '%u': [] }
      GIVEN:    { '%s': [ 'givenName' ] }
      FAMILY:   { '%s': [ 'sn' ] }
      FN:       { '%s %s': [ 'givenName', 'sn' ] }
      EMAIL:    { '%s': [ 'mail' ] }
      PHOTO:    { '%s': [ 'jpegPhoto'] }
    ldap_search_fields:
      User ID: '%u'
      First Name: 'givenName'
      Last Name: 'sn'
      Email: 'mail'
    ldap_search_reported:
      User ID: '%u'
      First Name: 'givenName'
      Last Name: 'sn'
      Email: 'mail'

  mod_s2s_dialback: { }
  mod_shared_roster: { }
  mod_sic: { }
  mod_stream_mgmt:
    resend_on_timeout: if_offline
  mod_stun_disco: { }
  mod_vcard_xupdate: { }
  mod_version: { }
