---

# See https://github.com/grafana/grafana/issues/12638
- name: Create the required symbolic links
  ansible.builtin.file:
    src: /var/lib/grafana
    dest: /usr/share/grafana/data
    state: link
  tags: config

- name: Create the required symbolic links
  ansible.builtin.file:
    src: /var/log/grafana
    dest: /usr/share/grafana/data/logs
    state: link
  tags: config

- name: Create plugins directory to avoid startup error
  notify: Restart Grafana server
  ansible.builtin.file:
    path: /var/lib/grafana/plugins
    state: directory
    mode: '0700'
    owner: grafana
    group: grafana
  tags: config

- name: Deploy Grafana main config file
  notify: Restart Grafana server
  ansible.builtin.template:
    src: grafana.ini
    dest: /etc/grafana/grafana.ini
    mode: '0640'
    owner: root
    group: grafana
  tags: config

- name: Deploy Grafana LDAP config file
  notify: Restart Grafana server
  ansible.builtin.template:
    src: ldap.toml
    dest: /etc/grafana/ldap.toml
    mode: '0640'
    owner: root
    group: grafana
  tags: config

- name: Restart Grafana now if needed
  ansible.builtin.meta: flush_handlers
  tags: config

# See https://github.com/grafana/grafana/issues/12638
- name: Set the admin password using the API
  when: package_status.changed | default(false)
  tags: config
  block:
    - name: Wait for Grafana API to be available
      ansible.builtin.wait_for:
        host: 127.0.0.1
        port: 3000
        delay: 10
    - name: Set the admin password using the API
      register: password_api
      ansible.builtin.uri:
        url: http://127.0.0.1:3000/api/user/password
        body:
          oldPassword: admin
          newPassword: '{{ grafana_admin_password }}'
          confirmNew: '{{ grafana_admin_password }}'
        method: PUT
        body_format: json
        force_basic_auth: true
        url_username: admin
        url_password: admin
    - name: Display the output
      ansible.builtin.debug:
        var: password_api
        verbosity: 1

- name: Create and store the api key
  when: package_status.changed | default(false)
  tags: config
  block:
    - name: Call the api to create the admin key
      register: api_key_create_call
      ansible.builtin.uri:
        url: http://127.0.0.1:3000/api/auth/keys
        method: POST
        url_username: admin
        url_password: '{{ grafana_admin_password }}'
        body:
          name: admin
          role: Admin
        body_format: json
        force_basic_auth: true
    - name: Store the api key into the passwordstore using pass
      when: creds.store == "passwordstore"
      no_log: '{{ hide_secrets }}'
      ansible.builtin.set_fact:
        grafana_api_key: >-
          {{ lookup(creds.store,
          creds.prefix + "/grafana/api-key"
          + creds.opts.create
          + creds.opts.overwrite
          + " userpass=" + api_key_create_call.json.key
          )}}
    - name: Store the api key into the password text file
      when: creds.store == "password"
      delegate_to: localhost
      no_log: '{{ hide_secrets }}'
      ansible.builtin.copy:
        content: '{{ api_key_create_call.json.key }}'
        dest: '{{ backup_directory }}/{{ creds.prefix }}/grafana/admin'
        mode: '0600'
    - name: Store the api key
      ansible.builtin.set_fact:
        grafana_api_key: '{{ api_key_create_call.json.key }}'
