---
## Main installation playbook

# Load default settings once, this is needed to defined
# some conditional flags used below
- import_playbook: load-defaults.yml

# Prepare the system, get its external IP address,
# and set up remote access
- import_playbook: system-prepare.yml
- import_playbook: remote-access.yml

# Install fwknop (Single Packet Authorization)
- import_playbook: fwknop-client.yml
  when: firewall.fwknop.install
- import_playbook: fwknop-server.yml
  when: firewall.fwknop.install

# Install dropbear to remotely unlock the system.
# Will not do anything if the drive is not encrypted
- import_playbook: luks-remote.yml

# Install nginx as the default web server,
# it is needed to obtain certificates with certbot.
- import_playbook: nginx.yml

# Install the DNS server first if requested
- import_playbook: dns-server-bind.yml
  when: bind.install

# Check if the DNS entries are now propagated on internet
- import_playbook: dns-server-check-propagation.yml
  when: bind.install and bind.propagation.check

# At this point, if you have installed bind,
# perhaps you should wait a few hours until
# the DNS propagation is complete.

# Start to create users and home directories
- import_playbook: ldap.yml

# Set-up user settings (sudo, home folders. etc.)
- import_playbook: user-setup.yml

# Access check and logging per country, IP address, etc.
- import_playbook: access-check.yml
  when: access_check.active
- import_playbook: access-report.yml
  when: access_check.active

# Configure SSH for remote access using borgbackup,
# But only for users with an ssh key provided.
# See system-example.yml configuration file
- import_playbook: backup-server.yml

# System protection: antispam
- import_playbook: rspamd.yml
  when: mail.antispam.active

# Install the web frontend for the antispam system
- import_playbook: rspamd-web.yml
  when: mail.antispam.webui.active

# System protection: antivirus
- import_playbook: clamav.yml
  when: mail.antivirus.active

# Email server: MTA
- import_playbook: opendkim.yml
- import_playbook: opendmarc.yml
- import_playbook: cert-smtp.yml
- import_playbook: postfix.yml

# Add mta-sts security
- import_playbook: mta-sts.yml

# Mail delivery agent (dovecot, pop3 protocol)
- import_playbook: cert-pop3.yml
  when: mail.pop3

# Mail delivery agent (dovecot, imap protocol and daemon)
- import_playbook: cert-imap.yml
- import_playbook: dovecot.yml

# Install the selected webmail
- import_playbook: roundcube.yml
  when: webmail.install and webmail.type == 'roundcube'

# Add RoundCube milters if specified
- import_playbook: roundcube-milters.yml
  when: webmail.install and webmail.milters.active

# Install SOGo if chosen
- import_playbook: sogo.yml
  when: sogo.install

# Add SOGo milters if specified
- import_playbook: sogo-milters.yml
  when: sogo.install and sogo.milters.active

# Install ejabberd, with LDAP authentication
- import_playbook: ejabberd.yml
  when: ejabberd.install

# Install a simple but secure (https) web site skeleton
- import_playbook: website-simple.yml
  when: website.install

# Automatic configuration for email clients.
- import_playbook: autodiscover.yml
  when: mail.autodiscover
- import_playbook: autoconfig.yml
  when: mail.autoconfig

# Backup script using borg-backup
- import_playbook: borgbackup.yml
  when: backup.install

# Install Gogs git server
- import_playbook: gogs.yml
  when: gogs.install

# Install Transmission bittorrent daemon
- import_playbook: transmission.yml
  when: transmission.install

# Build the complete DNS server zones file
- import_playbook: dns-server-bind-refresh.yml
  when: bind.install

# Install tor and privoxy
- import_playbook: tor.yml
  when: tor.install
- import_playbook: privoxy.yml
  when: privoxy.install

# Zabbix monitor, with email and jabber alerts
- import_playbook: zabbix.yml
  when: zabbix.install

# Add the old emails import scripts for each users
# Except when in development mode.
# It can alter the tests and is CPU intensive if you have
# defined a lot of accounts.
- import_playbook: import-accounts.yml
  when: mail.import.active and not system.devel

# Generate additional certificates
- import_playbook: extra-certs.yml
  when: extra_certs is defined

# Add well-known services handling
- import_playbook: well-known-services.yml

# Run post installation tasks: Clean up and security
- import_playbook: system-post-install.yml
