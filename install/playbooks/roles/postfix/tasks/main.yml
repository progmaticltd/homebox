---

# Install postfix packages
- name: Install postfix packages
  tags: postfix
  notify: Restart postfix
  apt:
    name: "{{ postfix_pkgs }}"
    state: present

################################################################################
# At this point, the certificates should have been created already #############
# in order to have SSL and TLS encryption activated.                           #
- name: Set the default permissions for the smtp certificate folders
  tags: certificates
  import_role:
    name: cert-perms
  vars:
    cert_dir: 'smtp.{{ network.domain }}'
    entity_group: postfix

- name: Copy the certificate renewal hook
  tags: cert
  copy:
    src: renew-cert.sh
    dest: /etc/letsencrypt/renewal-hooks/deploy/20-postfix.sh
    mode: '0755'

#                                                                              #
# End of TLS / SSL Configuration ###############################################

- name: Ensure the imap server FQDN resolves to localhost
  tags: postfix
  lineinfile:
    path: /etc/hosts
    line: '127.0.0.1    smtp.{{ network.domain }}'

- name: Install postfix packages for local administration
  tags: postfix
  notify: Restart postfix
  vars:
    pkgs:
      - pfqueue
      - bsd-mailx
  apt:
    name: "{{ pkgs }}"
    state: present

# The typical base64 overhead is 33%, and the value in the configuration file is in Mb
# So the value is max_attachment_size * 1.33 * 1024 * 1024, i.e. max_attachment_size * 1394606
# Adding 1Kb for the message text, because we are generous (sic)
- name: Compute max message size from max attachment size
  tags: config
  set_fact:
    message_size_limit: '{{ 1024 + mail.max_attachment_size * 1394606 | int }}'

- name: Copy the template for /etc/mailname for completeness (not used by configuration)
  tags: config
  template:
    src: mailname
    dest: /etc/mailname

- name: Copy configuration template
  tags: config
  notify: Restart postfix
  template:
    src: "{{ file }}"
    dest: "/etc/postfix/{{ file }}"
  with_items:
    - master.cf
    - main.cf
    - ldap-aliases.cf
    - senders-bcc.cf
    - headers-check.cf
  loop_control:
    loop_var: file

- name: Refresh the senders bcc map
  tags: postfix
  notify: Restart postfix
  command: "postmap /etc/postfix/{{ file }}"
  with_items:
    - senders-bcc.cf
  loop_control:
    loop_var: file

- name: Configure the firewall for default access
  tags: postfix,security
  ufw:
    rule: allow
    proto: tcp
    src: any
    port: '{{ rule.port }}'
    comment: '{{ rule.comment }}'
  with_items:
    - comment: Allow basic SMTP
      port: 25
    - comment: Allow encrypted SMTP
      port: 465
    - comment: Allow submission
      port: '{{ mail.postfix.submission.port }}'
  loop_control:
    loop_var: rule

# AppArmor configuration ======================================================
- name: Install some postfix AppArmor profile
  tags: security, apparmor
  notify: Restart postfix
  register: aa_templates
  template:
    src: 'apparmor.d/{{ aa_config }}'
    dest: '/etc/apparmor.d/{{ aa_config }}'
  with_items:
    - '{{ postfix_apparmor_profiles }}'
  loop_control:
    loop_var: aa_config

- name: Activate AppArmor profiles
  when: aa_templates.changed
  tags: security, apparmor
  notify: Restart AppArmor service
  command: 'aa-enforce {{ aa_config }}'
  with_items:
    - '{{ postfix_apparmor_profiles }}'
  loop_control:
    loop_var: aa_config

# See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=858587
- name: Fix a bug in fail2ban configuration
  tags: security,fail2ban
  notify: Restart fail2ban
  replace:
    path: /etc/fail2ban/jail.conf
    regexp: 'imap3,'
    replace: ''

# Create an empty mail.warn configuration, to let fail2ban start
- name: Create an empty mail.warn
  tags: security,fail2ban
  file:
    path: /var/log/mail.warn
    state: touch

# Some misconfigured servers are generating a lot of errors
# While this is happening before authentication, this generates
# a lot of noise and can be problematic to extract
# useful information from log files
- name: Add custom postfix fail2ban rule to reduce noise
  tags: security, fail2ban
  notify: Restart fail2ban
  template:
    src: fail2ban-noise-reduction.conf
    dest: /etc/fail2ban/filter.d/postfix-nr.conf

- name: Add sections in the jail config
  tags: security, fail2ban
  notify: Restart fail2ban
  ini_file:
    path: /etc/fail2ban/jail.conf
    section: 'postfix-nr'
    option: '{{ option.name }}'
    value: '{{ option.value }}'
    create: yes
  with_items:
    - name: port
      value: smtp,465,submission
    - name: logpath
      value: '%(postfix_log)s'
    - name: backend
      value: '%(postfix_backend)s'
    - name: enabled
      value: True
    - name: bantime
      value: '{{ mail.fail2ban.time }}'
  loop_control:
    loop_var: option

- name: Activate fail2ban on postfix
  tags: security, fail2ban
  notify: Restart fail2ban
  ini_file:
    path: /etc/fail2ban/jail.conf
    section: '{{ section }}'
    option: enabled
    value: true
    create: no
  with_items:
    - postfix
    - postfix-sasl
    - postfix-rbl
  loop_control:
    loop_var: section

- name: Set fail2ban time
  tags: security, fail2ban
  notify: Restart fail2ban
  ini_file:
    path: /etc/fail2ban/jail.conf
    option: bantime
    section: '{{ section }}'
    value: '{{ mail.fail2ban.time }}'
    create: no
  with_items:
    - postfix
    - postfix-sasl
    - postfix-rbl
  loop_control:
    loop_var: section

# Create entries for the DNS server ===========================================

# Use IP addresses as SPF mechanisms for the server itself
- name: Add the external IP address as SPF sender
  tags: spf
  set_fact:
    spf_senders: '{{ "ip6:" + external_ip if external_ip | ipv6 else "ip4:" + external_ip }}'

- name: Add the backup IP address as SPF sender
  when: backup_ip is defined and (backup_ip | length > 0)
  tags: spf
  set_fact:
    spf_senders: '{{ spf_senders }} {{ "ip6:" + backup_ip if backup_ip | ipv6 else "ip4:" + backup_ip }}'

- name: Add the user configured extra senders to the SPF record
  when: mail.extra_senders
  tags: spf
  set_fact:
    spf_senders: '{{ spf_senders }} {{ mail.extra_senders | join(" ") }}'

# Use "soft fail" in development mode
- name: Set the SPF qualifier as "soft fail"
  tags: spf
  when: system.devel or system.debug
  set_fact:
    spf_qualifier: '~'

# Use "fail" (strict) otherwise
- name: Set the SPF qualifier as strict
  tags: spf
  when: not system.devel and not system.debug
  set_fact:
    spf_qualifier: '-'

- name: Generate DNS records for bind
  tags: bind
  when: bind.install
  template:
    src: 30-postfix.bind
    dest: /etc/homebox/dns-entries.d/30-postfix.bind
